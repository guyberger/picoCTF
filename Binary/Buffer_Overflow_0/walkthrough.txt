

Buffer overflow - using unsafe functions like fgets, has a vulnerability of overflowing the buffer the user writes into by entering a larger input than expected.
Here the overflow is caused because the program calls vuln with a user argument as input,
 in that case a string, and assumes the user enters max 16 chars.
when calling a function some one of the things that is backed up on the stack is the
return address. After that some registers are backed up too and then the local variable buf 
is backed up. to overflow the buffer we need to insert enough characters to exceed the
buffer's size and overwrite the return address, so that when pc tries to read the return
address he gets 0 which alerts a SIGSEGV.

Steps:

1. run the program ./vuln with argument of '00000...' as much as it takes to reach the return address.

2. this will cause a buffer overflow and you will get the flag.



**signal function defines a new signal handler function to handle the exception.
